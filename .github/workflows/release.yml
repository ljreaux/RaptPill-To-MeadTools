name: Build and Release Python GUI App

on:
  push:
    tags:
      - "v*" # Trigger only on version tags like v1.0, v0.2, etc.

permissions:
  contents: write # Required for creating a GitHub release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          if [[ "$RUNNER_OS" == "Windows" ]]; then pip install bleak-winrt; fi
        shell: bash

      - name: Inject secure config
        run: |
          echo "GOOGLE_CLIENT_ID = '${{ secrets.GOOGLE_CLIENT_ID }}'" >> config.py
          echo "GOOGLE_CLIENT_SECRET = '${{ secrets.GOOGLE_CLIENT_SECRET }}'" >> config.py
          echo "NEXTJS_API_URL = '${{ secrets.NEXTJS_API_URL }}'" >> config.py
        shell: bash

      - name: Install Linux dependencies for PySide6
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-xinerama0 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xkb1 libxkbcommon-dev libxcb-shape0 libxcb-xinerama0-dev

      # Windows Build
      - name: Build Windows Executable
        if: runner.os == 'Windows'
        run: |
          pip install pillow
          pyinstaller --onefile --windowed ^
            --name meadtools-pill ^
            --icon=src\icons\meadtools-pill.ico ^
            --add-data "src\icons;icons" ^
            --add-data "src\data.json;." ^
            --hidden-import=PySide6.QtCore ^
            --hidden-import=PySide6.QtGui ^
            --hidden-import=PySide6.QtWidgets ^
            --hidden-import=requests ^
            --hidden-import=bleak ^
            --hidden-import=bleak.backends.winrt ^
            src\PillToMeadTools.py
        shell: cmd

      # macOS Build
      - name: Build macOS App Bundle
        if: runner.os == 'macOS'
        run: |
          pyinstaller --windowed --onedir \
            --name "MeadToolsPill" \
            --icon=src/icons/meadtools-pill.icns \
            --add-data "src/icons:icons" \
            --add-data "src/data.json:." \
            --hidden-import=PySide6.QtCore \
            --hidden-import=PySide6.QtGui \
            --hidden-import=PySide6.QtWidgets \
            --hidden-import=requests \
            --hidden-import=bleak \
            --hidden-import=bleak.backends.corebluetooth \
            --hidden-import=objc \
            --hidden-import=Foundation \
            --hidden-import=CoreBluetooth \
            src/PillToMeadTools.py

          ls -lh dist/
          cd dist && zip -r MeadToolsPill-macOS.zip MeadToolsPill.app
        shell: bash

      # Linux Build
      - name: Build Linux Executable
        if: runner.os == 'Linux'
        run: |
          pyinstaller --onefile --windowed \
            --name meadtools-pill-linux \
            --icon=src/icons/meadtools-pill.png \
            --add-data "src/icons:icons" \
            --add-data "src/data.json:." \
            --hidden-import=PySide6.QtCore \
            --hidden-import=PySide6.QtGui \
            --hidden-import=PySide6.QtWidgets \
            --hidden-import=requests \
            --hidden-import=bleak \
            --hidden-import=bleak.backends.bluezdbus \
            src/PillToMeadTools.py
        shell: bash

      # Upload artifacts
      - name: Upload Windows Artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: windows-executable
          path: dist/meadtools-pill.exe
          if-no-files-found: error

      - name: Upload macOS Artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: dist/MeadToolsPill-macOS.zip
          if-no-files-found: error

      - name: Upload Linux Artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: linux-executable
          path: dist/meadtools-pill-linux
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows Executable
        uses: actions/download-artifact@v4
        with:
          name: windows-executable
          path: release-files

      - name: Download macOS App
        uses: actions/download-artifact@v4
        with:
          name: macos-app
          path: release-files

      - name: Download Linux Executable
        uses: actions/download-artifact@v4
        with:
          name: linux-executable
          path: release-files

      - name: Make Linux Executable
        run: chmod +x release-files/meadtools-pill-linux || true

      - name: Rename Files for Clarity
        run: |
          ls -la release-files/
          mv release-files/meadtools-pill.exe release-files/MeadToolsPill-Windows.exe || true
          mv release-files/meadtools-pill-linux release-files/MeadToolsPill-Linux || true
          echo "Final release files:"
          ls -la release-files/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-files/*
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false
          body: |
            Release ${{ github.ref_name }} binaries for Windows, macOS, and Linux.

            ### Installation Instructions:

            **Windows**: Download and run the .exe file  
            **macOS**: Download and unzip the .zip file, then right-click and select "Open" on first use  
            **Linux**: Download the Linux file, make executable with `chmod +x`, and run
